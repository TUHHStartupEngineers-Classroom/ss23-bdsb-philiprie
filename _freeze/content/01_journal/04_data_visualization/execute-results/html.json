{
  "hash": "8a2b2c646c928523aeba745349a26c55",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Philip C. Riege\"\n---\n\n\n# Challenge 4.1\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_14d202bf4ba64770276a3000cb4a8030'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(glue)\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>%\n  select(location, date, total_cases) %>%\n  filter(location %in% c(\"Europe\", \"Germany\", \"United Kingdom\", \"France\", \"Spain\", \"United States\"))\n\ncovid_data_tbl %>%\n  \n  #plot cases over date\n  ggplot(aes(x = date, y = total_cases, color = location)) +\n  \n  #line plot\n  geom_line() +\n  \n  #scales for the x and y axis\n  scale_x_date(labels = scales::label_date(format = \"%b '%y\"), date_breaks = \"1 month\") +\n  scale_y_continuous(labels = scales::label_number(scale = 1e-6, prefix = \"\", suffix = \" M\")) +\n  \n  #add axis labels and title\n  labs(\n    title = \"COVID-19 confirmed cases worldwide\",\n    subtitle = glue(\"As of {date}\",\n                    date=format(max(covid_data_tbl$date),\"%d/%m/%Y\")),\n    caption = \"Challenge 1\",\n    x = \"\",\n    y = \"Cumulative Cases\",\n    color = \"Continent / Country\",\n  )+\n  \n  #choose minimal theme and modify\n  theme_minimal()+\n  theme(legend.position = \"bottom\",\n        plot.caption.position = \"plot\",\n        plot.caption = element_text(hjust = 0.5, size = 12),\n        axis.text.x = element_text(angle = 45, hjust =1),\n        plot.title = element_text(size=12),\n        plot.subtitle  = element_text(size=9),\n        legend.text = element_text(size = 7),\n        legend.title = element_text(size = 9),\n        )\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n# Challenge 4.2\n\nI had some difficulties with this task. As can be seen from the plot, for some countries no values for the death rate could be obtained. These regions for which the entry at the death rate then is na, are colored gray.\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_02c2aa8baace93ebc4a64722ff0ceec6'}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"readxl\")\nlibrary(\"lubridate\")\nlibrary(\"data.table\")\nlibrary(\"vroom\")\nlibrary(\"scales\")\nlibrary(\"ggthemes\")\nlibrary(\"gapminder\")\nlibrary(\"ggplot2\")\nlibrary(\"forcats\")\nlibrary(\"readxl\")\nlibrary(\"ggrepel\")\nlibrary(\"glue\")\n\nworld <- map_data(\"world\")\n\ncovid_data <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>%\n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  distinct() %>%\n  group_by(location) %>%\n  slice(which.max(as.Date(date))) %>%\n  select(location, total_deaths, population,date) %>%\n  mutate(death_rate = total_deaths/population)\n\ncov_data_world <-  world %>%\n  left_join(covid_data, by = c(\"region\"=\"location\")) %>%\n  select(long, lat, group, order, region, subregion, everything())\n  \ncov_data_world %>% ggplot() +\n  geom_map( aes(long, lat, map_id = region, fill = death_rate), \n            map = cov_data_world,\n            color = \"grey\",\n            size = 0.09\n  )+\n  scale_fill_gradient(low = \"#FFC6C6\", high = \"#FF0000\", na.value = \"grey\")\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}